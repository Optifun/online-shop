@using MudBlazor
@using OnlineShop.Client.Components.Auth
@using OnlineShop.Client.Services
@using OnlineShop.Client.Services.State
@using OnlineShop.Core.Model
@inherits LayoutComponentBase
@inject IDialogService _dialogService
@inject CookieStorage _cookieStorage
@inject Navigation _navigation

<MudLayout>
    <MudAppBar Elevation="1">
        @if (!navMenuOpen)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle"/>
        }
        <MudSpacer/>

        <MudButton OnClick="Auth">
            <MudAvatar Color="Color.Info" Variant="Variant.Text">
                @if (Letter != ' ')
                {
                    <span>@Letter</span>
                }
                else
                {
                    <MudIcon Icon="@Icons.Outlined.QuestionMark"/>
                }
            </MudAvatar>
            <MudPopover Open="@_logoutOpen" Fixed="true" Class="px-4 pt-4" AnchorOrigin="Origin.BottomCenter">
                <div class="d-flex flex-column">
                    <MudText>Вы уверены, что хотите выйти?</MudText>
                    <MudButton OnClick="Logout" Class="ml-auto mr-n3 mb-1" Color="Color.Error">Выйти</MudButton>
                    <MudButton OnClick="Toggle" Class="ml-auto mr-n3 mb-1" Color="Color.Info">Отмена</MudButton>
                </div>
            </MudPopover>
        </MudButton>
        <MudTooltip Text="Корзина">
            <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Inherit"/>
        </MudTooltip>
    </MudAppBar>

    <NavMenu Open=@navMenuOpen ClickedClose="DrawerToggle"/>
    <MudMainContent>
        <div class="content px-4">
            @Body
        </div>
    </MudMainContent>
</MudLayout>

@code{

    [CascadingParameter]
    public AppState AppState { get; set; }

    bool navMenuOpen = false;
    private char Letter;
    private bool _logoutOpen;

    protected override void OnParametersSet()
    {
        string userName = AppState.UserState?.UserName ?? "";
        Letter = userName != "" ? userName.Substring(0, 1).ToUpper()[0] : ' ';
    }

    void DrawerToggle()
    {
        navMenuOpen = !navMenuOpen;
    }

    private void Auth()
    {
        if (AppState.UserState == null)
            _dialogService.Show<AuthDialog>();
        else
            Toggle();
    }

    private async Task Logout()
    {
        await _cookieStorage.SetCookie("_token", "", 0);
        _navigation.NavigateTo(_navigation.GetLocation(), true);
    }

    private void Toggle() => 
        _logoutOpen = !_logoutOpen;

}